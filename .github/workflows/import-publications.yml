# Hugo Blox GitHub Action to convert Bibtex publications to Markdown-based webpages
name: Import Publications From Bibtex

# Require permission to create a PR
permissions:
  contents: write
  pull-requests: write

# Run workflow when a `.bib` file is added or updated in the `data/` folder
on:
  push:
    branches: ['main']
    paths: ['publications.bib']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  hugoblox:
    if: github.repository_owner != 'HugoBlox'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install academic==0.10.0
      - name: Run Academic (Bibtex To Markdown Converter)
        # Check `.bib` file exists for case when action runs on `.bib` deletion
        # Note GH only provides hashFiles func in `steps.if` context, not `jobs.if` context
        if: ${{ hashFiles('publications.bib') != '' }}
        run: academic import publications.bib content/publication/ --compact
      - name: Normalize Publication Types
        run: |
          python << EOF
          import os
          import re
          import sys

          pub_dir = 'content/publication'
          # Mapping from academic tool slugs to Wowchemy numeric IDs
          type_map = {
              'paper-conference': '1',
              'article-journal': '2',
              'chapter': '6',
              # You can add more mappings here if needed.
              # Default Wowchemy types: 0:Uncategorized, 1:Conference, 2:Journal, 3:Preprint, 4:Report, 5:Book, 6:Book section
          }

          for root, dirs, files in os.walk(pub_dir):
              for file in files:
                  if file == 'index.md':
                      filepath = os.path.join(root, file)
                      try:
                          with open(filepath, 'r', encoding='utf-8') as f:
                              content = f.read()

                          # Regex to find the publication_types block with a string slug
                          pattern = re.compile(r"publication_types:\s*\n-\s*(\w+(?:-\w+)?)")
                          
                          def replace_pub_type(match):
                              slug = match.group(1)
                              numeric_id = type_map.get(slug, "0") # Default to "0" (Uncategorized) if not in map
                              return f'publication_types: ["{numeric_id}"]'

                          new_content, count = pattern.subn(replace_pub_type, content)

                          if count > 0:
                              with open(filepath, 'w', encoding='utf-8') as f:
                                  f.write(new_content)
                              print(f"Normalized publication type in {filepath}")
                      except Exception as e:
                          print(f"Error processing {filepath}: {e}", file=sys.stderr)
          EOF
      - name: Create Pull Request
        # Set ID for `Check outputs` stage
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: 'content: import publications from Bibtex'
          title: Hugo Blox Builder - Import latest publications
          body: |
            Import the latest publications from `publications.bib` to `content/publication/`.
            将最新的出版物从`publications.bib`导入到`content/publication/`。
            [View Documentation](https://github.com/GetRD/academic-file-converter)
          base: main
          labels: automated-pr, content
          branch: hugoblox-import-publications
          delete-branch: true
      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
